#include<bits/stdc++.h>
using namespace std;

struct meeting_type{
  int start;
  int end;
  int pos;
};

bool comparator(struct meeting_type meet1, meeting_type meet2){
  if(meet1.end>meet2.end){return false;}
  else if(meet2.end>meet1.end){return true;}
  else if(meet1.pos>meet2.pos){return true;}
    return false;
}




void maxmeets(int s[],int e[],int n){
  struct meeting_type meets[n];

  for(int i=0;i<n;i++){

   meets[i].start=s[i];
   meets[i].end=e[i];
   meets[i].pos=i;

  }
  

  sort(meets,meets+n,comparator);

    vector<int>ans;
   int limit=meets[0].end;
   ans.push_back(meets[0].start);

   for(int i=1;i<n;i++){
     
     if(meets[i].start>limit){
      limit=meets[i].end;
      ans.push_back(meets[i].start);
     }}

     for(int i=0;i<ans.size();i++){
      cout<<ans[i]<<" ";
     }
     cout<<endl;



}



int main(){

int N = 6;
int start[] = {1,3,0,5,8,5};
int end[] =  {2,4,6,7,9,9};
maxmeets(start,end,N);


  return 0;
}